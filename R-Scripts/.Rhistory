break;
}
}
}
return(lbp[lbp$bp == TRUE,])
}
bumpLocations <- processBumpLocation(bumps, l, s$m.time)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(s$m.time, type='l', main="time")
rstudio::viewData(bumpLocations)
readSensors <- function(timeStamp) {
# Local variable
ts = toString(timeStamp)
# Column names for the data frames (j1, j2 etc are junk which will be discarded)
orinames <- c('j1', 'time', 'j2', 'ox', 'oy', 'oz')
accnames <- c('j1', 'time', 'j2', 'ax', 'ay', 'az')
eventnames <- c('idx', 'time')
# Read the tables
ori <- read.table(paste(ts, "ORIENTATION.txt", sep="_"), col.names = orinames, sep="")
acc <- read.table(paste(ts, "ACCELEROMETER.txt", sep="_"), col.names = accnames, sep="")
evt <- read.table(paste(ts, "KeyEvent.txt", sep="_"), col.names = eventnames, sep="")
# Merge the orientation and acceleration tables so that they are close in time
m <- ori[(abs(ori$time-acc$time)<10),]
n <- acc[(abs(ori$time-acc$time)<10),]
x <- data.frame(I(m$time),m$ox,m$oy,m$oz,n$ax,n$ay,n$az)
#   # Finally, make the obtained data equally spaced in time - BUGGY
#   diffx <- vector(mode="numeric", length=length(x$m.time))
#   for(i in 2:length(diffx)) {
#     diffx[i] <- x$m.time[i] - x$m.time[i-1]
#   }
#   diffx[1] = diffx[2]
#   modX <- x[diffx<=mean(diffx), ]
#
#   return(modX);
return(x)
}
# Following are the main results of the analysis of accelerometer and orientation sensors:
# * Orientation along 'x' provides the direction of the car along the road
# * Orientation along 'y' provides the lateral variation of the car along the road (ideally NIL)
# * Orientation along 'z' provides the altitude variation of the car along the road
# * Acceleration along 'x' provides the acceleration/deceleration of the car along the road
# * Acceleration along 'y' provides the lateral acceleration/deceleration of the car (ideally NIL)
# * Acceleration along 'z' provides the vertical motion of the car (clear indicates road unevenness)
processEvents <- function (x, madparam=10, midval=median(x$n.az), midvalUse=TRUE) {
# If direction (filtered to remove noise) stays same and the acceleration along z-axis has a large
# disturbance and acceleration along x-axis has decreased and then slowly increased, this indicates
# a possible bad-road condition. We create a vector of this event
# Filter the direction data
# Find standard deviation of acceleration along z-axis
mdx <- vector(mode="numeric", length=length(x$m.time))
if(midvalUse == TRUE) {
for(i in 1:length(mdx)) {
if(i < madparam)
mdx[i] <- mad(x$n.az[1:i],center=midval)
else
mdx[i] <- mad(x$n.az[(i-madparam+1):i], center=midval)
}
}
else
{
for(i in 1:length(mdx)) {
if(i < madparam)
mdx[i] <- mad(x$n.az[1:i])
else
mdx[i] <- mad(x$n.az[(i-madparam+1):i])
}
}
# Compute velocity along x-axis
# Create a bump-vector based on the above data
bvec = vector(mode="logical", length=length(mdx))
mad_mdx = mad(mdx)
for(i in 2:length(mdx)) {
if(abs(mdx[i]-mdx[i-1]) > mad_mdx) {
bvec[i] = TRUE
}
}
bvec[1] = FALSE
#Filter to obtain smoother vector.
for(i in 11:(length(bvec)-10)) {
if(((bvec[i-10] == TRUE)||(bvec[i-9] == TRUE) ||
(bvec[i-8] == TRUE)||(bvec[i-7] == TRUE)||(bvec[i-6] == TRUE) ||
(bvec[i-5] == TRUE)||(bvec[i-4] == TRUE) ||
(bvec[i-3] == TRUE)||(bvec[i-2] == TRUE)||(bvec[i-1] == TRUE)) &&
((bvec[i+10] == TRUE)||(bvec[i+9] == TRUE)||
(bvec[i+8] == TRUE)||(bvec[i+7] == TRUE)||(bvec[i+6] == TRUE) ||
(bvec[i+5] == TRUE)||(bvec[i+4] == TRUE)||
(bvec[i+3] == TRUE)||(bvec[i+2] == TRUE)||(bvec[i+1] == TRUE)))
bvec[i] = TRUE;
}
# Return final vector
return (bvec)
}
readLocations <- function(timeStamp) {
# Local variable
ts = toString(timeStamp)
# Column names for the data frames (j1, j2 etc are junk which will be discarded)
locnames <- c('typ', 'time', 'j1', 'acy', 'alt', 'lat', 'long', 'brg', 'spd')
# Read the tables
loc <- read.table(paste(ts, "Location.txt", sep="_"), col.names = locnames, sep="")
# clean up location data
l <- loc[loc$acy <= 20, ]
y <- data.frame(l$time, l$alt, l$lat, l$long)
return(y)
}
processBumpLocation <- function(bump, loc, tim, tf=200) {
# Get a vector of all the times at which a bump occurred
timeBumps <- tim[bump == TRUE]
# Parse through the location vector and set all locations that are bumps as TRUE
bp <- vector(mode="logical", length(loc$l.time))
tb <- vector(mode="integer", length(loc$l.time))
lbp <- cbind(loc, bp, tb);
k <- 1;
for (i in 1:length(bp)) {
for(j in k:(length(timeBumps)-1)) {
if(abs(lbp$l.time[i]-timeBumps[j]) < tf) {
lbp$bp[i] = TRUE;
lbp$tb[i] = timeBumps[j];
k <- j + 1;
break;
}
else if((lbp$l.time[i]-timeBumps[j]) > tf) {
j <- j + 1;
}
else if((timeBumps[j] - lbp$l.time[i]) > tf) {
k <- j;
break;
}
}
}
return(lbp[lbp$bp == TRUE,])
}
#Read sensors and location values
s <- readSensors('23.18.10.50'); l <- readLocations('23.18.10.50');
bumps <- processEvents(s, madparam=20, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time)
rstudio::viewData(bumpLocations)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=20, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.10.50'); l <- readLocations('23.18.10.50');
bumps <- processEvents(s, madparam=20, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=20, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=400)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=20, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=1000)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=10, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=1000)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=20, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=1000)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=10, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=1000)
fix(bumps)
temp <- s$m.time[bumps == TRUE]
fix(temp)
temp <- vector(s$m.time[bumps == TRUE])
temp <- vector(s$m.time[bumps == TRUE], mode="logical")
temp <- vector(s$m.time[bumps == TRUE], mode="logical", length=length(s$m.time[bumps == TRUE]))
fix(temp)
temp2 <- as.vector(temp, "logical")
fix(temp2)
temp2 <- as.vector(temp, "integer")
fix(temp2)
processBumpLocation <- function(bump, loc, tim, tf=200) {
# Get a vector of all the times at which a bump occurred
timeBumps <- as.vector(tim[bump == TRUE], "integer")
# Parse through the location vector and set all locations that are bumps as TRUE
bp <- vector(mode="logical", length(loc$l.time))
tb <- vector(mode="integer", length(loc$l.time))
lbp <- cbind(loc, bp, tb);
k <- 1;
for (i in 1:length(bp)) {
for(j in k:(length(timeBumps)-1)) {
if(abs(lbp$l.time[i]-timeBumps[j]) < tf) {
lbp$bp[i] = TRUE;
lbp$tb[i] = timeBumps[j];
k <- j + 1;
break;
}
else if((lbp$l.time[i]-timeBumps[j]) > tf) {
j <- j + 1;
}
else if((timeBumps[j] - lbp$l.time[i]) > tf) {
k <- j;
break;
}
}
}
return(lbp[lbp$bp == TRUE,])
}
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=10, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=1000)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
rm(temp)
rm(temp2)
rstudio::viewData(l)
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=20, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=1000)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=20, midvalUse=FALSE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=1000)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=20, midvalUse=FALSE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=100)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=30, midvalUse=FALSE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=100)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=22, midvalUse=FALSE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=100)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=23, midvalUse=FALSE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=100)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=23, midvalUse=FALSE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=50)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=23, midvalUse=FALSE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=30)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=15, midvalUse=FALSE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=30)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=15, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=30)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=12, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=30)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=12, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=20)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=8, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=20)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=20, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=100)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=12, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=100)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=18, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=100)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=15, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=100)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=17, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=100)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=30, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=100)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=19, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=100)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.22.42'); l <- readLocations('23.18.22.42');
bumps <- processEvents(s, madparam=19, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=40)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
#Read sensors and location values
s <- readSensors('23.18.10.50'); l <- readLocations('23.18.10.50');
bumps <- processEvents(s, madparam=19, midvalUse=TRUE)
bumpLocations <- processBumpLocation(bumps, l, s$m.time, tf=40)
par(mfrow=c(3,2), mar=c(3,2,2,2))
plot(s$m.time, s$m.ox, type='l', main="orientation along X")
plot(s$m.time, s$n.ax, type='l', main="acceleration along X")
plot(s$m.time, s$n.az, type='l', main="acceleration along Z")
plot(s$m.time, s$m.oz, type='l', main="orientation along Z")
plot(s$m.time, bumps, type='l', main="Probable Bumps")
plot(bumpLocations$l.lat, bumpLocations$l.long, main="Bump Locations")
